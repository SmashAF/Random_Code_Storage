# To add a new cell, type '# %%'
# To add a new markdown cell, type '# %% [markdown]'
# %%
import warnings
warnings.filterwarnings('ignore')

# %% [markdown]
# Cross Val Intuition

# %%
import numpy as np
import matplotlib.pyplot as plt
def plot_scatter_fit(num_samps=50, fit_complexity=1, degree=1):
    N = num_samps
    np.random.seed(seed=23)
    # gen rand x vals
    x = np.random.rand(N)*20
    # define polynomials
    if degree==1:
        y = 5*x + 3
    if degree==2:
        y = 3*x**2 + 5*x + 3
    if degree==3:
        y = -0.2*x**3 + 3*x**2 + 5*x + 3
    if degree==4:
        y = 0.006*x**4 + -0.2*x**3 + 3*x**2 + 5*x + 3
    # get scatter range
    y_val_range = np.ptp(y)
    # add normal noise
    y = [pt + np.random.normal(loc=0.0, scale=((1./10)*y_val_range)) for pt in y]
    # draw a line
    fit_complexity_ = fit_complexity
    regr = np.poly1d(np.polyfit(x, y, fit_complexity_))(np.unique(x))
    # plot
    plt.title(f'N: {N}\n' +               f'data_degree: {degree}' +               f'fit_complexity: {fit_complexity}'
              )
    plt.scatter(x, y, c='y', alpha=0.5)
    plt.plot(np.unique(x), regr)
    plt.show()
plot_scatter_fit(num_samps=50, fit_complexity=20, degree=4)


# %%



